{"version":3,"file":"static/js/664.435549c0.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.ts","components/ContactList/ContactList.styled.ts","components/ContactList/ContactListItem.tsx","components/ContactList/ContactList.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactFormTitle = styled.h1`\n  color: black;\n  text-transform: capitalize;\n`;\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-right: auto;\n  margin-left: auto;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding: 20px;\n  width: fit-content;\n`;\n\nexport const ContactFormList = styled.ul`\n  padding-left: 0;\n  margin-bottom: 0;\n  margin-top: 0;\n  list-style: none;\n`;\n\nexport const ContactFormItem = styled.li`\n  margin-bottom: 15px;\n`;\n\nexport const ContactFormLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  text-transform: capitalize;\n  font-size: 18px;\n`;\n\nexport const ContactFormInput = styled.input`\n  min-width: 300px;\n  min-height: 30px;\n  margin-top: 5px;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding-left: 5px;\n\n  &::placeholder {\n    font-size: 16px;\n    color: lightgray;\n  }\n`;\n\nexport const AddContactButton = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  min-width: 120px;\n  min-height: 30px;\n  border-radius: 4px;\n  background: transparent;\n  border: 2px solid gray;\n  color: gray;\n  text-transform: capitalize;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n\n  &:hover,\n  :focus-visible {\n    background-color: gray;\n    color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ContactList = styled.ul`\n  margin-right: auto;\n  margin-left: auto;\n  padding-left: 0;\n  width: 360px;\n  list-style: none;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  height: 110px;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding: 15px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: flex-start;\n`;\n\nexport const ContactName = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nexport const ContactNumber = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nexport const DeleteContactButton = styled.button`\n  padding: 5px;\n  min-width: 80px;\n  min-height: 30px;\n  cursor: pointer;\n  border-radius: 4px;\n  border: none;\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus-visible {\n    background-color: gray;\n    color: white;\n  }\n`;\n\nexport const EditContactButton = styled.button`\n  padding: 5px;\n  min-width: 80px;\n  min-height: 30px;\n  cursor: pointer;\n  border-radius: 4px;\n  border: none;\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus-visible {\n    background-color: gray;\n    color: white;\n  }\n`;\n\nexport const ContactMessage = styled.p``;\n\n//////////////////////////////////////////////////\n\nexport const EditContactForm = styled.form`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const EditContactFormList = styled.ul`\n  padding-left: 0;\n  margin-bottom: 0;\n  margin-top: 0;\n  list-style: none;\n`;\n\nexport const EditContactFormItem = styled.li``;\n\nexport const EditContactFormLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  text-transform: capitalize;\n  font-size: 18px;\n`;\n\nexport const EditContactFormInput = styled.input`\n  min-height: 30px;\n  margin-top: 5px;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding-left: 5px;\n\n  &::placeholder {\n    font-size: 16px;\n    color: lightgray;\n  }\n`;\n\nexport const UpdateContactButton = styled.button`\n  padding: 5px;\n  min-width: 80px;\n  min-height: 30px;\n  cursor: pointer;\n  border-radius: 4px;\n  border: none;\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus-visible {\n    background-color: gray;\n    color: white;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  min-width: 250px;\n  min-height: 35px;\n  margin-top: 10px;\n  border: 2px solid gray;\n  border-radius: 4px;\n\n  &::placeholder {\n    text-transform: capitalize;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useDeleteContactMutation, useUpdateContactMutation } from 'redux/contact/contact-api';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\nimport FORM_CONFIG from '../ContactForm/ContactForm.config.json';\nimport {\n  ContactItem,\n  ContactWrapper,\n  ContactName,\n  ContactNumber,\n  DeleteContactButton,\n  EditContactButton,\n  EditContactForm,\n  EditContactFormList,\n  EditContactFormItem,\n  EditContactFormInput,\n  UpdateContactButton,\n} from './ContactList.styled';\n\ninterface ContactListItemProps {\n  id: string;\n  name: string;\n  number: string;\n}\n\nconst ContactListItem = ({ id, name, number }: ContactListItemProps) => {\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [contact, setContact] = useState({ id, name, number });\n\n  const [deleteContact, { isError: isDeleteError, isLoading: isDeleting, isSuccess: isDeleted }] =\n    useDeleteContactMutation();\n\n  const [editContact, { isError: isEditError, isLoading: isEditing, isSuccess: isEdited }] =\n    useUpdateContactMutation();\n\n  const handleInputChange = ({ target: { name, value } }: React.ChangeEvent<HTMLInputElement>) => {\n    setContact(state => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    editContact(contact);\n    setIsUpdating(false);\n  };\n\n  useEffect(() => {\n    isDeleted && toast.warn(` ${name} is deleted`);\n  }, [isDeleted, name]);\n\n  useEffect(() => {\n    isDeleteError && toast.error(` ${name} can't be deleted`);\n  }, [isDeleteError, name]);\n\n  useEffect(() => {\n    isEdited && toast.success(` ${name} was successfully updated`);\n  }, [isEdited, name]);\n\n  useEffect(() => {\n    isEditError && toast.error(` ${name} can't be edited`);\n  }, [isEditError, name]);\n\n  return (\n    <ContactItem>\n      {isUpdating ? (\n        <EditContactForm onSubmit={handleFormSubmit}>\n          <EditContactFormList>\n            {FORM_CONFIG.map(field => (\n              <EditContactFormItem key={field.name}>\n                <EditContactFormInput\n                  type={field.type}\n                  title={field.title}\n                  name={field.name}\n                  placeholder={field.placeholder}\n                  pattern={field.pattern}\n                  required={field.required}\n                  value={contact[field.name as keyof typeof contact] }\n                  onChange={handleInputChange}\n                />\n              </EditContactFormItem>\n            ))}\n          </EditContactFormList>\n          <ContactWrapper>\n            <UpdateContactButton\n              type=\"button\"\n              disabled={isEditing}\n              onClick={() => setIsUpdating(false)}\n            >\n              cancel\n            </UpdateContactButton>\n            <UpdateContactButton disabled={isEditing}>save</UpdateContactButton>\n          </ContactWrapper>\n        </EditContactForm>\n      ) : (\n        <>\n          <ContactWrapper>\n            <ContactName>{name}</ContactName>\n            <ContactNumber>{number}</ContactNumber>\n          </ContactWrapper>\n          <ContactWrapper>\n            <EditContactButton\n              type=\"button\"\n              disabled={isDeleting}\n              onClick={() => setIsUpdating(true)}\n            >\n              edit\n            </EditContactButton>\n            <DeleteContactButton disabled={isDeleting} onClick={() => deleteContact(id)}>\n              {isDeleting ? (\n                <ThreeDots ariaLabel=\"three-dots-loading\" height={20} width={70} color=\"gray\" />\n              ) : (\n                'delete'\n              )}\n            </DeleteContactButton>\n          </ContactWrapper>\n        </>\n      )}\n    </ContactItem>\n  );\n};\n\nexport default ContactListItem;\n","import { useNavigate } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector, useContacts } from 'redux/hooks';\nimport { getFilterValue, setFilter } from 'redux/contact';\nimport ContactListItem from './ContactListItem';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { ContactList, ContactMessage, Label, Input } from './ContactList.styled';\nimport { AddContactButton } from '../ContactForm/ContactForm.styled';\n\nconst ContactsList = () => {\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const filter = useAppSelector(getFilterValue);\n  const { isLoading, isSuccess,  filteredContacts } = useContacts();\n\n  const handleChange = ({ target: { value } }: React.ChangeEvent<HTMLInputElement>) =>\n    dispatch(setFilter(value));\n\n  return (\n    <>\n      {isLoading && <ThreeDots color=\"gray\" height={80} width={80} />}\n\n      {filteredContacts?.length === 0 && (\n        <AddContactButton type=\"button\" onClick={() => navigate('/create')}>\n          create contact\n        </AddContactButton>\n      )}\n\n      {isSuccess && filteredContacts ? (\n        <>\n          <Label htmlFor=\"\">\n            <Input placeholder=\"find contacts\" type=\"text\" value={filter} onChange={handleChange} />\n          </Label>\n\n          <ContactList>\n            {filteredContacts.map(contact => (\n              <ContactListItem key={contact.id} {...contact} />\n            ))}\n          </ContactList>\n        </>\n      ) : (\n        <ContactMessage>You haven't any contacts.</ContactMessage>\n      )}\n    </>\n  );\n};\n\nexport default ContactsList;\n"],"names":["ContactFormTitle","styled","h1","_templateObject","_taggedTemplateLiteral","ContactForm","form","_templateObject2","ContactFormList","ul","_templateObject3","ContactFormItem","li","_templateObject4","ContactFormLabel","label","_templateObject5","ContactFormInput","input","_templateObject6","AddContactButton","button","_templateObject7","ContactList","ContactItem","ContactWrapper","div","ContactName","p","ContactNumber","DeleteContactButton","EditContactButton","ContactMessage","_templateObject8","EditContactForm","_templateObject9","EditContactFormList","_templateObject10","EditContactFormItem","_templateObject11","EditContactFormInput","_templateObject12","_templateObject13","UpdateContactButton","_templateObject14","Label","_templateObject15","Input","_templateObject16","_ref","id","name","number","isUpdating","setIsUpdating","useState","contact","setContact","deleteContact","isError","isDeleteError","isLoading","isDeleting","isSuccess","isDeleted","useDeleteContactMutation","editContact","isEditError","isEditing","isEdited","useUpdateContactMutation","handleInputChange","_ref2","target","value","state","_objectSpread","useEffect","toast","warn","concat","error","success","_jsx","children","_jsxs","onSubmit","event","preventDefault","FORM_CONFIG","map","field","type","title","placeholder","pattern","required","onChange","disabled","onClick","_Fragment","ThreeDots","ariaLabel","height","width","color","ContactsList","navigate","useNavigate","dispatch","useAppDispatch","filter","useAppSelector","getFilterValue","filteredContacts","useContacts","length","htmlFor","setFilter","ContactListItem"],"sourceRoot":""}