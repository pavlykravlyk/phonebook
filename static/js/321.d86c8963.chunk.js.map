{"version":3,"file":"static/js/321.d86c8963.chunk.js","mappings":"gUAEaA,EAAmBC,EAAAA,GAAAA,GAAH,wEAKhBC,EAAcD,EAAAA,GAAAA,KAAH,6MAWXE,EAAkBF,EAAAA,GAAAA,GAAH,wGAOfG,EAAkBH,EAAAA,GAAAA,GAAH,gDAIfI,EAAmBJ,EAAAA,GAAAA,MAAH,oJAQhBK,EAAmBL,EAAAA,GAAAA,MAAH,sOAchBM,EAAmBN,EAAAA,GAAAA,OAAH,uZ,iLCkC7B,EApEkB,WAChB,IAAMO,EAAe,CAAEC,KAAM,GAAIC,OAAQ,IACzC,GAA8BC,EAAAA,EAAAA,UAASH,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACcC,GAAgBC,EAAAA,EAAAA,MAAtBC,KACR,GACEC,EAAAA,EAAAA,MADF,eAAOC,EAAP,YAAqBC,EAArB,EAAqBA,QAAoBC,EAAzC,EAA8BC,UAAgCC,EAA9D,EAAmDC,UAG7CC,EAAoB,SAAC,GAAD,QAAGC,OAAUhB,EAAb,EAAaA,KAAMiB,EAAnB,EAAmBA,MAAnB,OACxBb,GAAW,SAAAc,GAAK,yBAAUA,GAAV,cAAkBlB,EAAOiB,QAqB3C,OAXAE,EAAAA,EAAAA,YAAU,WACRN,GAAWO,EAAAA,GAAAA,QAAA,UAAiBjB,EAAQH,KAAzB,4BACXI,EAAWL,KACV,CAACc,KAEJM,EAAAA,EAAAA,YAAU,WACRT,GAAWU,EAAAA,GAAAA,MAAA,UAAejB,EAAQH,KAAvB,sBACV,CAACU,KAKF,iCACE,SAAC,KAAD,sBAEA,UAAC,IAAD,CAAaW,SAvBQ,SAACC,GACxBA,EAAMC,iBAEK,OAAXlB,QAAW,IAAXA,GAAAA,EAAamB,MAAK,SAACC,GAAD,OAA+BA,EAAKzB,OAASG,EAAQH,QACnEoB,EAAAA,GAAAA,MAAA,UAAejB,EAAQH,KAAvB,4BACAS,EAAWN,IAkBb,WACE,SAAC,KAAD,UACGuB,EAAAA,KAAgB,gBAAGC,EAAH,EAAGA,KAAYC,EAAf,EAAS5B,KAAiB6B,EAA1B,EAA0BA,YAAaC,EAAvC,EAAuCA,QAASC,EAAhD,EAAgDA,MAAOC,EAAvD,EAAuDA,SAAvD,OACf,SAAC,KAAD,WACE,UAAC,KAAD,WACGJ,GACD,SAAC,KAAD,CACED,KAAMA,EACNI,MAAOA,EACP/B,KAAM4B,EACNC,YAAaA,EACbC,QAASA,EACTE,SAAUA,EACVf,MAAOd,EAAQyB,GACfK,SAAUlB,QAXMa,SAkB1B,SAAC,KAAD,CAAkBM,SAAUvB,EAA5B,SACGA,GACC,SAAC,KAAD,CAAWwB,UAAU,qBAAqBC,OAAQ,GAAIC,MAAM,SAE5D,mBAKLxB,IAAW,SAAC,KAAD,CAAUyB,GAAG,mB","sources":["components/ContactForm/ContactForm.styled.ts","components/ContactForm/ContactForm.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactFormTitle = styled.h1`\n  color: black;\n  text-transform: capitalize;\n`;\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-right: auto;\n  margin-left: auto;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding: 20px;\n  width: fit-content;\n`;\n\nexport const ContactFormList = styled.ul`\n  padding-left: 0;\n  margin-bottom: 0;\n  margin-top: 0;\n  list-style: none;\n`;\n\nexport const ContactFormItem = styled.li`\n  margin-bottom: 15px;\n`;\n\nexport const ContactFormLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  text-transform: capitalize;\n  font-size: 18px;\n`;\n\nexport const ContactFormInput = styled.input`\n  min-width: 300px;\n  min-height: 30px;\n  margin-top: 5px;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding-left: 5px;\n\n  &::placeholder {\n    font-size: 16px;\n    color: lightgray;\n  }\n`;\n\nexport const AddContactButton = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  min-width: 120px;\n  min-height: 30px;\n  border-radius: 4px;\n  background: transparent;\n  border: 2px solid gray;\n  color: gray;\n  text-transform: capitalize;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n\n  &:hover,\n  :focus-visible {\n    background-color: gray;\n    color: white;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAddContactMutation, useGetContactsQuery } from 'redux/contact/contact-api';\nimport FORM_CONFIG from './ContactForm.config.json';\nimport { toast } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport {\n  ContactFormTitle,\n  ContactForm,\n  ContactFormList,\n  ContactFormItem,\n  ContactFormLabel,\n  ContactFormInput,\n  AddContactButton,\n} from './ContactForm.styled';\n\n\nconst Phonebook = () => {\n  const initialState = { name: '', number: '' };\n  const [contact, setContact] = useState(initialState);\n  const { data: allContacts } = useGetContactsQuery();\n  const [addContact, { isError, isLoading: isAdding, isSuccess: isAdded }] =\n    useAddContactMutation();\n\n  const handleInputChange = ({ target: { name, value } }: React.ChangeEvent<HTMLInputElement>) =>\n    setContact(state => ({ ...state, [name]: value }));\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    allContacts?.some((item: typeof initialState) => item.name === contact.name)\n      ? toast.error(`${contact.name} is already in contacts`)\n      : addContact(contact);\n  };\n\n  useEffect(() => {\n    isAdded && toast.success(`${contact.name} has successfully added`);\n    setContact(initialState);\n  }, [isAdded]);\n\n  useEffect(() => {\n    isError && toast.error(`${contact.name} can't be added`);\n  }, [isError]);\n\n  type ContactName = keyof typeof contact;\n\n  return (\n    <>\n      <ContactFormTitle>create</ContactFormTitle>\n\n      <ContactForm onSubmit={handleFormSubmit}>\n        <ContactFormList>\n          {FORM_CONFIG.map(({ type, name: fieldName, placeholder, pattern, title, required }) => (\n            <ContactFormItem key={fieldName}>\n              <ContactFormLabel>\n                {fieldName}\n                <ContactFormInput\n                  type={type}\n                  title={title}\n                  name={fieldName}\n                  placeholder={placeholder}\n                  pattern={pattern}\n                  required={required}\n                  value={contact[fieldName as ContactName]}\n                  onChange={handleInputChange}\n                />\n              </ContactFormLabel>\n            </ContactFormItem>\n          ))}\n        </ContactFormList>\n\n        <AddContactButton disabled={isAdding}>\n          {isAdding ? (\n            <ThreeDots ariaLabel=\"three-dots-loading\" height={18} color=\"gray\" />\n          ) : (\n            'add contact'\n          )}\n        </AddContactButton>\n      </ContactForm>\n\n      {isAdded && <Navigate to=\"/contacts\" />}\n    </>\n  );\n};\n\nexport default Phonebook;\n"],"names":["ContactFormTitle","styled","ContactForm","ContactFormList","ContactFormItem","ContactFormLabel","ContactFormInput","AddContactButton","initialState","name","number","useState","contact","setContact","allContacts","useGetContactsQuery","data","useAddContactMutation","addContact","isError","isAdding","isLoading","isAdded","isSuccess","handleInputChange","target","value","state","useEffect","toast","onSubmit","event","preventDefault","some","item","FORM_CONFIG","type","fieldName","placeholder","pattern","title","required","onChange","disabled","ariaLabel","height","color","to"],"sourceRoot":""}