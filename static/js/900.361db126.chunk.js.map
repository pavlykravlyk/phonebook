{"version":3,"file":"static/js/900.361db126.chunk.js","mappings":"6ZAEaA,EAAiBC,EAAAA,GAAAA,GAAH,wEAKdC,EAAYD,EAAAA,GAAAA,KAAH,6MAWTE,EAAgBF,EAAAA,GAAAA,GAAH,wGAObG,EAAgBH,EAAAA,GAAAA,GAAH,gDAIbI,EAAiBJ,EAAAA,GAAAA,MAAH,oJAQdK,EAAiBL,EAAAA,GAAAA,MAAH,8JASdM,EAAcN,EAAAA,GAAAA,OAAH,sZ,UC2BxB,EA1Dc,WACZ,OAAwBO,EAAAA,EAAAA,UAAS,CAAEC,MAAO,GAAIC,SAAU,KAAxD,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAmDC,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,YAAgBC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,UAAWC,EAAtC,EAAsCA,QAEhCC,EAAoB,SAAC,GAAD,QAAGC,OAAUC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,MAAnB,OACxBT,GAAQ,SAAAU,GAAK,yBAAUA,GAAV,cAAkBF,EAAOC,QAaxC,OANAE,EAAAA,EAAAA,YAAU,WACRP,GAAaJ,EAAQ,CAAEH,MAAO,GAAIC,SAAU,KAC5CO,GACEO,EAAAA,GAAAA,MAAY,6DACb,CAACP,EAASD,KAGX,iCACE,SAAChB,EAAD,qBAEA,UAACE,EAAD,CAAWuB,SAfU,SAACC,GACxBA,EAAMC,iBACNb,EAAMH,IAamCiB,aAAa,MAApD,WACE,SAACzB,EAAD,UACG0B,EAAAA,KAAsB,gBAAGT,EAAH,EAAGA,KAAMU,EAAT,EAASA,KAAMC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,SAAtB,OACrB,SAAC5B,EAAD,WACE,UAACC,EAAD,WACGe,GACD,SAACd,EAAD,CACEwB,KAAMA,EACNV,KAAMA,EACNW,MAAOA,EACPV,MAAOV,EAAKS,GACZa,SAAUf,EACVc,SAAUA,EACVJ,aAAa,cAVCR,SAiBxB,SAACb,EAAD,CAAa2B,SAAUnB,EAAvB,SACGA,GACC,SAAC,KAAD,CACEoB,UAAU,qBACVC,OAAQ,GACRC,MAAM,SAGR","sources":["components/LoginForm/LoginForm.styled.ts","components/LoginForm/LoginForm.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoginFormTitle = styled.h1`\n  color: black;\n  text-transform: capitalize;\n`;\n\nexport const LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-right: auto;\n  margin-left: auto;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding: 20px;\n  width: fit-content;\n`;\n\nexport const LoginFormList = styled.ul`\n  padding-left: 0;\n  margin-bottom: 0;\n  margin-top: 0;\n  list-style: none;\n`;\n\nexport const LoginFormItem = styled.li`\n  margin-bottom: 15px;\n`;\n\nexport const LoginFormLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  text-transform: capitalize;\n  font-size: 18px;\n`;\n\nexport const LoginFormInput = styled.input`\n  min-width: 300px;\n  min-height: 30px;\n  margin-top: 5px;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding-left: 5px;\n`;\n\nexport const LoginButton = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  min-width: 120px;\n  min-height: 30px;\n  border-radius: 4px;\n  background: transparent;\n  border: 2px solid gray;\n  color: gray;\n  text-transform: capitalize;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n\n  &:hover,\n  :focus-visible {\n    background-color: gray;\n    color: white;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLoginMutation } from 'redux/auth';\nimport LOGIN_FORM_CONFIG from './LoginForm.config.json';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\nimport {\n  LoginFormTitle,\n  LoginForm,\n  LoginFormList,\n  LoginFormItem,\n  LoginFormLabel,\n  LoginFormInput,\n  LoginButton,\n} from './LoginForm.styled';\n\nconst Login = () => {\n  const [user, setUser] = useState({ email: '', password: '' });\n  const [logIn, { isLoading, isSuccess, isError }] = useLoginMutation();\n\n  const handleInputChange = ({ target: { name, value } }: React.ChangeEvent<HTMLInputElement>) =>\n    setUser(state => ({ ...state, [name]: value }));\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    logIn(user);\n  };\n\n  useEffect(() => {\n    isSuccess && setUser({ email: '', password: '' });\n    isError &&\n      toast.error('Your login attempt was not successful. Please try again');\n  }, [isError, isSuccess]);\n\n  return (\n    <>\n      <LoginFormTitle>login</LoginFormTitle>\n\n      <LoginForm onSubmit={handleFormSubmit} autoComplete=\"off\">\n        <LoginFormList>\n          {LOGIN_FORM_CONFIG.map(({ name, type, title, required }) => (\n            <LoginFormItem key={name}>\n              <LoginFormLabel>\n                {name}\n                <LoginFormInput\n                  type={type}\n                  name={name}\n                  title={title}\n                  value={user[name as keyof typeof user]}\n                  onChange={handleInputChange}\n                  required={required}\n                  autoComplete=\"false\"\n                />\n              </LoginFormLabel>\n            </LoginFormItem>\n          ))}\n        </LoginFormList>\n\n        <LoginButton disabled={isLoading}>\n          {isLoading ? (\n            <ThreeDots\n              ariaLabel=\"three-dots-loading\"\n              height={18}\n              color=\"gray\"\n            />\n          ) : (\n            'login'\n          )}\n        </LoginButton>\n      </LoginForm>\n    </>\n  );\n};\n\nexport default Login;"],"names":["LoginFormTitle","styled","LoginForm","LoginFormList","LoginFormItem","LoginFormLabel","LoginFormInput","LoginButton","useState","email","password","user","setUser","useLoginMutation","logIn","isLoading","isSuccess","isError","handleInputChange","target","name","value","state","useEffect","toast","onSubmit","event","preventDefault","autoComplete","LOGIN_FORM_CONFIG","type","title","required","onChange","disabled","ariaLabel","height","color"],"sourceRoot":""}