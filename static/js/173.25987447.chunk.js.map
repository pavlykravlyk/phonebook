{"version":3,"file":"static/js/173.25987447.chunk.js","mappings":"mNAEO,MAAMA,EAAmBC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0DAK5BC,EAAcJ,EAAAA,GAAOK,KAAIC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+LAWzBI,EAAkBP,EAAAA,GAAOQ,GAAEC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0FAO3BO,EAAkBV,EAAAA,GAAOW,GAAEC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,kCAI3BU,EAAmBb,EAAAA,GAAOc,MAAKC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,sIAQ/Ba,EAAmBhB,EAAAA,GAAOiB,MAAKC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,wNAc/BgB,EAAmBnB,EAAAA,GAAOoB,OAAMC,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,uY,4IClC7C,MAsEA,EAtEkBmB,KAChB,MAAMC,EAAe,CAAEC,KAAM,GAAIC,OAAQ,KAClCC,EAASC,IAAcC,EAAAA,EAAAA,UAASL,IAC/BM,KAAMC,IAAgBC,EAAAA,EAAAA,OACvBC,GAAY,QAAEC,EAASC,UAAWC,EAAUC,UAAWC,KAC5DC,EAAAA,EAAAA,MAEIC,EAAoBC,IAAA,IAAGC,QAAQ,KAAEjB,EAAI,MAAEkB,IAA8CF,EAAA,OACzFb,GAAWgB,IAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAE,CAACnB,GAAOkB,KAAS,EAuBpD,OAbAG,EAAAA,EAAAA,YAAU,KACRR,GAAWS,EAAAA,GAAMC,QAAQ,GAADC,OAAItB,EAAQF,KAAI,4BACxCG,EAAWJ,EAAa,GAEvB,CAACc,KAEJQ,EAAAA,EAAAA,YAAU,KACRZ,GAAWa,EAAAA,GAAMG,MAAM,GAADD,OAAItB,EAAQF,KAAI,mBAAkB,GAEvD,CAACS,KAKFiB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACtD,EAAAA,GAAgB,CAAAqD,SAAC,YAElBF,EAAAA,EAAAA,MAAC9C,EAAAA,GAAW,CAACkD,SAzBSC,IACxBA,EAAMC,iBAEK,OAAX1B,QAAW,IAAXA,GAAAA,EAAa2B,MAAMC,GAA8BA,EAAKlC,OAASE,EAAQF,OACnEsB,EAAAA,GAAMG,MAAM,GAADD,OAAItB,EAAQF,KAAI,4BAC3BQ,EAAWN,EAAQ,EAoBmB0B,SAAA,EACtCC,EAAAA,EAAAA,KAAC9C,EAAAA,GAAe,CAAA6C,SACbO,EAAYC,KAAIC,IAAA,IAAC,KAAEC,EAAMtC,KAAMuC,EAAS,YAAEC,EAAW,QAAEC,EAAO,MAAEC,EAAK,SAAEC,GAAUN,EAAA,OAChFR,EAAAA,EAAAA,KAAC3C,EAAAA,GAAe,CAAA0C,UACdF,EAAAA,EAAAA,MAACrC,EAAAA,GAAgB,CAAAuC,SAAA,CACdW,GACDV,EAAAA,EAAAA,KAACrC,EAAAA,GAAgB,CACf8C,KAAMA,EACNI,MAAOA,EACP1C,KAAMuC,EACNC,YAAaA,EACbC,QAASA,EACTE,SAAUA,EACVzB,MAAOhB,EAAQqC,GACfK,SAAU7B,QAXMwB,EAcJ,OAItBV,EAAAA,EAAAA,KAAClC,EAAAA,GAAgB,CAACkD,SAAUlC,EAASiB,SAClCjB,GACCkB,EAAAA,EAAAA,KAACiB,EAAAA,GAAS,CAACC,UAAU,qBAAqBC,OAAQ,GAAIC,MAAM,SAE5D,mBAKLpC,IAAWgB,EAAAA,EAAAA,KAACqB,EAAAA,GAAQ,CAACC,GAAG,gBACxB,C","sources":["components/ContactForm/ContactForm.styled.ts","components/ContactForm/ContactForm.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactFormTitle = styled.h1`\n  color: black;\n  text-transform: capitalize;\n`;\n\nexport const ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-right: auto;\n  margin-left: auto;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding: 20px;\n  width: fit-content;\n`;\n\nexport const ContactFormList = styled.ul`\n  padding-left: 0;\n  margin-bottom: 0;\n  margin-top: 0;\n  list-style: none;\n`;\n\nexport const ContactFormItem = styled.li`\n  margin-bottom: 15px;\n`;\n\nexport const ContactFormLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  text-transform: capitalize;\n  font-size: 18px;\n`;\n\nexport const ContactFormInput = styled.input`\n  min-width: 300px;\n  min-height: 30px;\n  margin-top: 5px;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding-left: 5px;\n\n  &::placeholder {\n    font-size: 16px;\n    color: lightgray;\n  }\n`;\n\nexport const AddContactButton = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  min-width: 120px;\n  min-height: 30px;\n  border-radius: 4px;\n  background: transparent;\n  border: 2px solid gray;\n  color: gray;\n  text-transform: capitalize;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n\n  &:hover,\n  :focus-visible {\n    background-color: gray;\n    color: white;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAddContactMutation, useGetContactsQuery } from 'redux/contact/contact-api';\nimport FORM_CONFIG from './ContactForm.config.json';\nimport { toast } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport {\n  ContactFormTitle,\n  ContactForm,\n  ContactFormList,\n  ContactFormItem,\n  ContactFormLabel,\n  ContactFormInput,\n  AddContactButton,\n} from './ContactForm.styled';\n\n\nconst Phonebook = () => {\n  const initialState = { name: '', number: '' };\n  const [contact, setContact] = useState(initialState);\n  const { data: allContacts } = useGetContactsQuery();\n  const [addContact, { isError, isLoading: isAdding, isSuccess: isAdded }] =\n    useAddContactMutation();\n\n  const handleInputChange = ({ target: { name, value } }: React.ChangeEvent<HTMLInputElement>) =>\n    setContact(state => ({ ...state, [name]: value }));\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    allContacts?.some((item: typeof initialState) => item.name === contact.name)\n      ? toast.error(`${contact.name} is already in contacts`)\n      : addContact(contact);\n  };\n\n  useEffect(() => {\n    isAdded && toast.success(`${contact.name} has successfully added`);\n    setContact(initialState);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAdded]);\n\n  useEffect(() => {\n    isError && toast.error(`${contact.name} can't be added`);\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isError]);\n\n  type ContactName = keyof typeof contact;\n\n  return (\n    <>\n      <ContactFormTitle>create</ContactFormTitle>\n\n      <ContactForm onSubmit={handleFormSubmit}>\n        <ContactFormList>\n          {FORM_CONFIG.map(({ type, name: fieldName, placeholder, pattern, title, required }) => (\n            <ContactFormItem key={fieldName}>\n              <ContactFormLabel>\n                {fieldName}\n                <ContactFormInput\n                  type={type}\n                  title={title}\n                  name={fieldName}\n                  placeholder={placeholder}\n                  pattern={pattern}\n                  required={required}\n                  value={contact[fieldName as ContactName]}\n                  onChange={handleInputChange}\n                />\n              </ContactFormLabel>\n            </ContactFormItem>\n          ))}\n        </ContactFormList>\n\n        <AddContactButton disabled={isAdding}>\n          {isAdding ? (\n            <ThreeDots ariaLabel=\"three-dots-loading\" height={18} color=\"gray\" />\n          ) : (\n            'add contact'\n          )}\n        </AddContactButton>\n      </ContactForm>\n\n      {isAdded && <Navigate to=\"/contacts\" />}\n    </>\n  );\n};\n\nexport default Phonebook;\n"],"names":["ContactFormTitle","styled","h1","_templateObject","_taggedTemplateLiteral","ContactForm","form","_templateObject2","ContactFormList","ul","_templateObject3","ContactFormItem","li","_templateObject4","ContactFormLabel","label","_templateObject5","ContactFormInput","input","_templateObject6","AddContactButton","button","_templateObject7","Phonebook","initialState","name","number","contact","setContact","useState","data","allContacts","useGetContactsQuery","addContact","isError","isLoading","isAdding","isSuccess","isAdded","useAddContactMutation","handleInputChange","_ref","target","value","state","_objectSpread","useEffect","toast","success","concat","error","_jsxs","_Fragment","children","_jsx","onSubmit","event","preventDefault","some","item","FORM_CONFIG","map","_ref2","type","fieldName","placeholder","pattern","title","required","onChange","disabled","ThreeDots","ariaLabel","height","color","Navigate","to"],"sourceRoot":""}