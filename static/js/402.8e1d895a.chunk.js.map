{"version":3,"file":"static/js/402.8e1d895a.chunk.js","mappings":"0dAEaA,EAAgBC,EAAAA,GAAAA,GAAH,wEAKbC,EAAeD,EAAAA,GAAAA,KAAH,6MAWZE,EAAeF,EAAAA,GAAAA,GAAH,wGAOZG,EAAeH,EAAAA,GAAAA,GAAH,gDAIZI,EAAgBJ,EAAAA,GAAAA,MAAH,oJAQbK,EAAgBL,EAAAA,GAAAA,MAAH,8JASbM,EAAiBN,EAAAA,GAAAA,OAAH,sZ,UC6B3B,EA5DiB,WACf,OAAwBO,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAAlE,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAqDC,EAAAA,EAAAA,MAArD,eAAOC,EAAP,YAAkBC,EAAlB,EAAkBA,UAAWC,EAA7B,EAA6BA,UAAWC,EAAxC,EAAwCA,QAElCC,EAAoB,SAAC,GAAD,QAAGC,OAAUX,EAAb,EAAaA,KAAMY,EAAnB,EAAmBA,MAAnB,OACxBR,GAAQ,SAAAS,GAAK,yBAAUA,GAAV,cAAkBb,EAAOY,QAexC,OARAE,EAAAA,EAAAA,YAAU,WACRN,GAAaJ,EAAQ,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,KACtDO,GACEM,EAAAA,GAAAA,MACE,sEAEH,CAACN,EAASD,KAGX,iCACE,SAACjB,EAAD,uBAEA,UAACE,EAAD,CAAcuB,SAjBO,SAACC,GACxBA,EAAMC,iBACNZ,EAAQH,IAeoCgB,aAAa,MAAvD,WACE,SAACzB,EAAD,UACG0B,EAAAA,KAAyB,gBAAGpB,EAAH,EAAGA,KAAMqB,EAAT,EAASA,KAAMC,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,SAAtB,OACxB,SAAC5B,EAAD,WACE,UAACC,EAAD,WACGI,GACD,SAACH,EAAD,CACEwB,KAAMA,EACNrB,KAAMA,EACNsB,MAAOA,EACPV,MAAOT,EAAKH,GACZwB,SAAUd,EACVa,SAAUA,EACVJ,aAAa,cAVAnB,SAiBvB,SAACF,EAAD,CAAgB2B,SAAUlB,EAA1B,SACGA,GACC,SAAC,KAAD,CACEmB,UAAU,qBACVC,OAAQ,GACRC,MAAM,SAGR","sources":["components/RegisterForm/RegisterForm.styled.ts","components/RegisterForm/RegisterForm.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegisterTitle = styled.h1`\n  color: black;\n  text-transform: capitalize;\n`;\n\nexport const RegisterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-right: auto;\n  margin-left: auto;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding: 20px;\n  width: fit-content;\n`;\n\nexport const RegisterList = styled.ul`\n  padding-left: 0;\n  margin-bottom: 0;\n  margin-top: 0;\n  list-style: none;\n`;\n\nexport const RegisterItem = styled.li`\n  margin-bottom: 15px;\n`;\n\nexport const RegisterLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  text-transform: capitalize;\n  font-size: 18px;\n`;\n\nexport const RegisterInput = styled.input`\n  min-width: 300px;\n  min-height: 30px;\n  margin-top: 5px;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding-left: 5px;\n`;\n\nexport const RegisterButton = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  min-width: 120px;\n  min-height: 30px;\n  border-radius: 4px;\n  background: transparent;\n  border: 2px solid gray;\n  color: gray;\n  text-transform: capitalize;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n\n  &:hover,\n  :focus-visible {\n    background-color: gray;\n    color: white;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useRegisterMutation } from 'redux/auth';\nimport REGISTER_FORM_CONFIG from './RegisterForm.config.json';\nimport { toast } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport {\n  RegisterTitle,\n  RegisterForm,\n  RegisterList,\n  RegisterItem,\n  RegisterLabel,\n  RegisterInput,\n  RegisterButton,\n} from './RegisterForm.styled';\n\nconst Register = () => {\n  const [user, setUser] = useState({ name: '', email: '', password: '' });\n  const [addUser, { isLoading, isSuccess, isError }] = useRegisterMutation();\n\n  const handleInputChange = ({ target: { name, value } }: React.ChangeEvent<HTMLInputElement>) =>\n    setUser(state => ({ ...state, [name]: value }));\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addUser(user);\n  };\n\n  useEffect(() => {\n    isSuccess && setUser({ name: '', email: '', password: '' });\n    isError &&\n      toast.error(\n        'Sorry you must enter a valid name, email and password to sign up',\n      );\n  }, [isError, isSuccess]);\n\n  return (\n    <>\n      <RegisterTitle>sign up</RegisterTitle>\n\n      <RegisterForm onSubmit={handleFormSubmit} autoComplete=\"off\">\n        <RegisterList>\n          {REGISTER_FORM_CONFIG.map(({ name, type, title, required }) => (\n            <RegisterItem key={name}>\n              <RegisterLabel>\n                {name}\n                <RegisterInput\n                  type={type}\n                  name={name}\n                  title={title}\n                  value={user[name as keyof typeof user]}\n                  onChange={handleInputChange}\n                  required={required}\n                  autoComplete=\"false\"\n                />\n              </RegisterLabel>\n            </RegisterItem>\n          ))}\n        </RegisterList>\n\n        <RegisterButton disabled={isLoading}>\n          {isLoading ? (\n            <ThreeDots\n              ariaLabel=\"three-dots-loading\"\n              height={18}\n              color=\"gray\"\n            />\n          ) : (\n            'sign up'\n          )}\n        </RegisterButton>\n      </RegisterForm>\n    </>\n  );\n};\n\nexport default Register;"],"names":["RegisterTitle","styled","RegisterForm","RegisterList","RegisterItem","RegisterLabel","RegisterInput","RegisterButton","useState","name","email","password","user","setUser","useRegisterMutation","addUser","isLoading","isSuccess","isError","handleInputChange","target","value","state","useEffect","toast","onSubmit","event","preventDefault","autoComplete","REGISTER_FORM_CONFIG","type","title","required","onChange","disabled","ariaLabel","height","color"],"sourceRoot":""}