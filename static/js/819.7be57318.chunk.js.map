{"version":3,"file":"static/js/819.7be57318.chunk.js","mappings":"gYAEO,MAAMA,EAAiBC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0DAK1BC,EAAYJ,EAAAA,GAAOK,KAAIC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+LAWvBI,EAAgBP,EAAAA,GAAOQ,GAAEC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0FAOzBO,EAAgBV,EAAAA,GAAOW,GAAEC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,kCAIzBU,EAAiBb,EAAAA,GAAOc,MAAKC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,sIAQ7Ba,EAAiBhB,EAAAA,GAAOiB,MAAKC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,gJAS7BgB,EAAcnB,EAAAA,GAAOoB,OAAMC,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,wY,aC/BxC,MA0DA,EA1DcmB,KACZ,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAAEC,MAAO,GAAIC,SAAU,MACjDC,GAAO,UAAEC,EAAS,UAAEC,EAAS,QAAEC,KAAaC,EAAAA,EAAAA,MAE7CC,EAAoBC,IAAA,IAAGC,QAAQ,KAAEC,EAAI,MAAEC,IAA8CH,EAAA,OACzFV,GAAQc,IAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAE,CAACF,GAAOC,KAAS,EAajD,OANAG,EAAAA,EAAAA,YAAU,KACRV,GAAaN,EAAQ,CAAEE,MAAO,GAAIC,SAAU,KAC5CI,GACEU,EAAAA,GAAMC,MAAM,0DAA0D,GACvE,CAACX,EAASD,KAGXa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC/C,EAAc,CAAA8C,SAAC,WAEhBF,EAAAA,EAAAA,MAACvC,EAAS,CAAC2C,SAfWC,IACxBA,EAAMC,iBACNrB,EAAML,EAAK,EAa8B2B,aAAa,MAAKL,SAAA,EACvDC,EAAAA,EAAAA,KAACvC,EAAa,CAAAsC,SACXM,EAAkBC,KAAIC,IAAA,IAAC,KAAEjB,EAAI,KAAEkB,EAAI,MAAEC,EAAK,SAAEC,GAAUH,EAAA,OACrDP,EAAAA,EAAAA,KAACpC,EAAa,CAAAmC,UACZF,EAAAA,EAAAA,MAAC9B,EAAc,CAAAgC,SAAA,CACZT,GACDU,EAAAA,EAAAA,KAAC9B,EAAc,CACbsC,KAAMA,EACNlB,KAAMA,EACNmB,MAAOA,EACPlB,MAAOd,EAAKa,GACZqB,SAAUxB,EACVuB,SAAUA,EACVN,aAAa,cAVCd,EAaJ,OAIpBU,EAAAA,EAAAA,KAAC3B,EAAW,CAACuC,SAAU7B,EAAUgB,SAC9BhB,GACCiB,EAAAA,EAAAA,KAACa,EAAAA,GAAS,CACRC,UAAU,qBACVC,OAAQ,GACRC,MAAM,SAGR,eAIL,C","sources":["components/LoginForm/LoginForm.styled.ts","components/LoginForm/LoginForm.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoginFormTitle = styled.h1`\n  color: black;\n  text-transform: capitalize;\n`;\n\nexport const LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-right: auto;\n  margin-left: auto;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding: 20px;\n  width: fit-content;\n`;\n\nexport const LoginFormList = styled.ul`\n  padding-left: 0;\n  margin-bottom: 0;\n  margin-top: 0;\n  list-style: none;\n`;\n\nexport const LoginFormItem = styled.li`\n  margin-bottom: 15px;\n`;\n\nexport const LoginFormLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  text-transform: capitalize;\n  font-size: 18px;\n`;\n\nexport const LoginFormInput = styled.input`\n  min-width: 300px;\n  min-height: 30px;\n  margin-top: 5px;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding-left: 5px;\n`;\n\nexport const LoginButton = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  min-width: 120px;\n  min-height: 30px;\n  border-radius: 4px;\n  background: transparent;\n  border: 2px solid gray;\n  color: gray;\n  text-transform: capitalize;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n\n  &:hover,\n  :focus-visible {\n    background-color: gray;\n    color: white;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLoginMutation } from 'redux/auth';\nimport LOGIN_FORM_CONFIG from './LoginForm.config.json';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { toast } from 'react-toastify';\nimport {\n  LoginFormTitle,\n  LoginForm,\n  LoginFormList,\n  LoginFormItem,\n  LoginFormLabel,\n  LoginFormInput,\n  LoginButton,\n} from './LoginForm.styled';\n\nconst Login = () => {\n  const [user, setUser] = useState({ email: '', password: '' });\n  const [logIn, { isLoading, isSuccess, isError }] = useLoginMutation();\n\n  const handleInputChange = ({ target: { name, value } }: React.ChangeEvent<HTMLInputElement>) =>\n    setUser(state => ({ ...state, [name]: value }));\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    logIn(user);\n  };\n\n  useEffect(() => {\n    isSuccess && setUser({ email: '', password: '' });\n    isError &&\n      toast.error('Your login attempt was not successful. Please try again');\n  }, [isError, isSuccess]);\n\n  return (\n    <>\n      <LoginFormTitle>login</LoginFormTitle>\n\n      <LoginForm onSubmit={handleFormSubmit} autoComplete=\"off\">\n        <LoginFormList>\n          {LOGIN_FORM_CONFIG.map(({ name, type, title, required }) => (\n            <LoginFormItem key={name}>\n              <LoginFormLabel>\n                {name}\n                <LoginFormInput\n                  type={type}\n                  name={name}\n                  title={title}\n                  value={user[name as keyof typeof user]}\n                  onChange={handleInputChange}\n                  required={required}\n                  autoComplete=\"false\"\n                />\n              </LoginFormLabel>\n            </LoginFormItem>\n          ))}\n        </LoginFormList>\n\n        <LoginButton disabled={isLoading}>\n          {isLoading ? (\n            <ThreeDots\n              ariaLabel=\"three-dots-loading\"\n              height={18}\n              color=\"gray\"\n            />\n          ) : (\n            'login'\n          )}\n        </LoginButton>\n      </LoginForm>\n    </>\n  );\n};\n\nexport default Login;"],"names":["LoginFormTitle","styled","h1","_templateObject","_taggedTemplateLiteral","LoginForm","form","_templateObject2","LoginFormList","ul","_templateObject3","LoginFormItem","li","_templateObject4","LoginFormLabel","label","_templateObject5","LoginFormInput","input","_templateObject6","LoginButton","button","_templateObject7","Login","user","setUser","useState","email","password","logIn","isLoading","isSuccess","isError","useLoginMutation","handleInputChange","_ref","target","name","value","state","_objectSpread","useEffect","toast","error","_jsxs","_Fragment","children","_jsx","onSubmit","event","preventDefault","autoComplete","LOGIN_FORM_CONFIG","map","_ref2","type","title","required","onChange","disabled","ThreeDots","ariaLabel","height","color"],"sourceRoot":""}