{"version":3,"file":"static/js/11.db8b26a5.chunk.js","mappings":"4bAEO,MAAMA,EAAgBC,EAAAA,GAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0DAKzBC,EAAeJ,EAAAA,GAAOK,KAAIC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+LAW1BI,EAAeP,EAAAA,GAAOQ,GAAEC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,0FAOxBO,EAAeV,EAAAA,GAAOW,GAAEC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,kCAIxBU,EAAgBb,EAAAA,GAAOc,MAAKC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,sIAQ5Ba,EAAgBhB,EAAAA,GAAOiB,MAAKC,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,gJAS5BgB,EAAiBnB,EAAAA,GAAOoB,OAAMC,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,wY,aC/B3C,MA4DA,EA5DiBmB,KACf,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,MAC3DC,GAAS,UAAEC,EAAS,UAAEC,EAAS,QAAEC,KAAaC,EAAAA,EAAAA,MAE/CC,EAAoBC,IAAA,IAAGC,QAAQ,KAAEV,EAAI,MAAEW,IAA8CF,EAAA,OACzFX,GAAQc,IAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAK,IAAE,CAACZ,GAAOW,KAAS,EAejD,OARAG,EAAAA,EAAAA,YAAU,KACRT,GAAaP,EAAQ,CAAEE,KAAM,GAAIC,MAAO,GAAIC,SAAU,KACtDI,GACES,EAAAA,GAAMC,MACJ,mEACD,GACF,CAACV,EAASD,KAGXY,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAC/C,EAAa,CAAA8C,SAAC,aAEfF,EAAAA,EAAAA,MAACvC,EAAY,CAAC2C,SAjBQC,IACxBA,EAAMC,iBACNpB,EAAQN,EAAK,EAe+B2B,aAAa,MAAKL,SAAA,EAC1DC,EAAAA,EAAAA,KAACvC,EAAY,CAAAsC,SACVM,EAAqBC,KAAIC,IAAA,IAAC,KAAE3B,EAAI,KAAE4B,EAAI,MAAEC,EAAK,SAAEC,GAAUH,EAAA,OACxDP,EAAAA,EAAAA,KAACpC,EAAY,CAAAmC,UACXF,EAAAA,EAAAA,MAAC9B,EAAa,CAAAgC,SAAA,CACXnB,GACDoB,EAAAA,EAAAA,KAAC9B,EAAa,CACZsC,KAAMA,EACN5B,KAAMA,EACN6B,MAAOA,EACPlB,MAAOd,EAAKG,GACZ+B,SAAUvB,EACVsB,SAAUA,EACVN,aAAa,cAVAxB,EAaJ,OAInBoB,EAAAA,EAAAA,KAAC3B,EAAc,CAACuC,SAAU5B,EAAUe,SACjCf,GACCgB,EAAAA,EAAAA,KAACa,EAAAA,GAAS,CACRC,UAAU,qBACVC,OAAQ,GACRC,MAAM,SAGR,iBAIL,C","sources":["components/RegisterForm/RegisterForm.styled.ts","components/RegisterForm/RegisterForm.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegisterTitle = styled.h1`\n  color: black;\n  text-transform: capitalize;\n`;\n\nexport const RegisterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-right: auto;\n  margin-left: auto;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding: 20px;\n  width: fit-content;\n`;\n\nexport const RegisterList = styled.ul`\n  padding-left: 0;\n  margin-bottom: 0;\n  margin-top: 0;\n  list-style: none;\n`;\n\nexport const RegisterItem = styled.li`\n  margin-bottom: 15px;\n`;\n\nexport const RegisterLabel = styled.label`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  text-transform: capitalize;\n  font-size: 18px;\n`;\n\nexport const RegisterInput = styled.input`\n  min-width: 300px;\n  min-height: 30px;\n  margin-top: 5px;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding-left: 5px;\n`;\n\nexport const RegisterButton = styled.button`\n  margin-left: auto;\n  margin-right: auto;\n  padding: 8px 16px;\n  min-width: 120px;\n  min-height: 30px;\n  border-radius: 4px;\n  background: transparent;\n  border: 2px solid gray;\n  color: gray;\n  text-transform: capitalize;\n  font-size: 16px;\n  font-weight: 500;\n  cursor: pointer;\n\n  &:hover,\n  :focus-visible {\n    background-color: gray;\n    color: white;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useRegisterMutation } from 'redux/auth';\nimport REGISTER_FORM_CONFIG from './RegisterForm.config.json';\nimport { toast } from 'react-toastify';\nimport { ThreeDots } from 'react-loader-spinner';\nimport {\n  RegisterTitle,\n  RegisterForm,\n  RegisterList,\n  RegisterItem,\n  RegisterLabel,\n  RegisterInput,\n  RegisterButton,\n} from './RegisterForm.styled';\n\nconst Register = () => {\n  const [user, setUser] = useState({ name: '', email: '', password: '' });\n  const [addUser, { isLoading, isSuccess, isError }] = useRegisterMutation();\n\n  const handleInputChange = ({ target: { name, value } }: React.ChangeEvent<HTMLInputElement>) =>\n    setUser(state => ({ ...state, [name]: value }));\n\n  const handleFormSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    addUser(user);\n  };\n\n  useEffect(() => {\n    isSuccess && setUser({ name: '', email: '', password: '' });\n    isError &&\n      toast.error(\n        'Sorry you must enter a valid name, email and password to sign up',\n      );\n  }, [isError, isSuccess]);\n\n  return (\n    <>\n      <RegisterTitle>sign up</RegisterTitle>\n\n      <RegisterForm onSubmit={handleFormSubmit} autoComplete=\"off\">\n        <RegisterList>\n          {REGISTER_FORM_CONFIG.map(({ name, type, title, required }) => (\n            <RegisterItem key={name}>\n              <RegisterLabel>\n                {name}\n                <RegisterInput\n                  type={type}\n                  name={name}\n                  title={title}\n                  value={user[name as keyof typeof user]}\n                  onChange={handleInputChange}\n                  required={required}\n                  autoComplete=\"false\"\n                />\n              </RegisterLabel>\n            </RegisterItem>\n          ))}\n        </RegisterList>\n\n        <RegisterButton disabled={isLoading}>\n          {isLoading ? (\n            <ThreeDots\n              ariaLabel=\"three-dots-loading\"\n              height={18}\n              color=\"gray\"\n            />\n          ) : (\n            'sign up'\n          )}\n        </RegisterButton>\n      </RegisterForm>\n    </>\n  );\n};\n\nexport default Register;"],"names":["RegisterTitle","styled","h1","_templateObject","_taggedTemplateLiteral","RegisterForm","form","_templateObject2","RegisterList","ul","_templateObject3","RegisterItem","li","_templateObject4","RegisterLabel","label","_templateObject5","RegisterInput","input","_templateObject6","RegisterButton","button","_templateObject7","Register","user","setUser","useState","name","email","password","addUser","isLoading","isSuccess","isError","useRegisterMutation","handleInputChange","_ref","target","value","state","_objectSpread","useEffect","toast","error","_jsxs","_Fragment","children","_jsx","onSubmit","event","preventDefault","autoComplete","REGISTER_FORM_CONFIG","map","_ref2","type","title","required","onChange","disabled","ThreeDots","ariaLabel","height","color"],"sourceRoot":""}